require 'shared_token'
require 'path'

grammar Assertion

  include SharedToken

  rule V_ASSETION_TEXT
    assertions
  end

  rule assertions
    assertion+
  end

  rule assertion
    (any_identifier ':')? boolean_expression
  end

  rule boolean_expression
    boolean_leaf | boolean_node
  end

  rule boolean_node
    SYM_EXISTS absolute_path
  | relative_path SYM_MATCHES SYM_START_CBLOCK c_primitive SYM_END_CBLOCK
  | SYM_NOT boolean_leaf
  | arithmetic_expression (SYM_NE | SYM_LT | SYM_GT | SYM_LE | SYM_GE) arithmetic_expression
  | boolean_expression (SYM_AND | SYM_OR | SYM_XOR | SYM_IMPLIES) boolean_expression
  end

  rule boolean_leaf
    '(' boolean_expression ')'
  | SYM_TRUE
  | SYM_FALSE
  end

  rule arithmetic_expression
    arithmetic_leaf
  | arithmetic_node
  end

  rule arithmetic_node
    arithmetic_expression ('+' | '-' | '*' | '/' | '^')arithmetic_leaf
  end

  rule arithmetic_leaf
   '(' arithmetic_expression ')'
  | integer_value
  | real_value
  | absolute_path
  end
end