require 'shared_token'
require 'dadl'
require 'cadl'
#require 'ap_helper'

grammar ADLSyntax

  include SharedToken
  include DADL
  include CADL

  rule archetype 
    arch_identification 
    arch_specialisation?
    arch_concept
    arch_language?
    arch_description?
    arch_definition
    arch_invariant?
    arch_ontology <Archetype>
  end

  rule arch_identification
    arch_head V_ARCHETYPE_ID space <ArchIdentification>
  end

  rule arch_head
    SYM_ARCHETYPE arch_meta_data? {
      def adl_version
      	p @elements
      end
    }
  end

  rule arch_meta_data
    '(' arch_meta_data_items ')' space {
    	def adl_version
	   arch_meta_data_items.adl_version
        end
    }
  end

  rule arch_meta_data_items
    arch_meta_data_item (';' arch_meta_data_item)* {
      def adl_version
        p @elements
      end
    }
  end

  rule arch_meta_data_item
    SYM_ADL_VERSION SYM_EQ V_VERSION_STRING {
      def adl_version
        self.V_VERSION_STRING.text_value
      end
    }
  / SYM_IS_CONTROLLED {
      def is_controlled?
        self.matched?
      end
    }
  end

  rule arch_specialisation
    SYM_SPECIALIZE V_ARCHETYPE_ID space
  end

  rule arch_concept
    SYM_CONCEPT V_LOCAL_TERM_CODE_REF space
  end

  rule arch_language
    SYM_LANGUAGE V_DADL_TEXT space
  end

  rule arch_description
    SYM_DESCRIPTION V_DADL_TEXT space
  end

  rule arch_definition
    SYM_DEFINITION V_CADL_TEXT space
  end

  rule arch_invariant
    SYM_INVARIANT V_ASSERTION_TEXT space
  end

  rule arch_ontology
    SYM_ONTOLOGY V_DADL_TEXT space
  end
end
